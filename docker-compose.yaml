version: '3.7'
services:
  mysql:
    image: debezium/example-mysql:2.2
    container_name: mysql
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=root_pass
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=mysqlpw

  rest:
    image: tabulario/iceberg-rest:0.1.0
    container_name: rest-catalog
    ports:
      - 8181:8181
    environment:
      - AWS_ACCESS_KEY_ID=root_user
      - AWS_SECRET_ACCESS_KEY=root_pass
      - AWS_REGION=us-east-1
      - CATALOG_WAREHOUSE=s3a://warehouse/wh/
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio:9000

  minio:
    image: minio/minio
    container_name: minio
    environment:
      - MINIO_ROOT_USER=root_user
      - MINIO_ROOT_PASSWORD=root_pass
    ports:
      - 9001:9001
      - 9000:9000
    command: ["server", "/data", "--console-address", ":9001"]

  mc:
    depends_on:
      - minio
    image: minio/mc
    container_name: mc
    environment:
      - AWS_ACCESS_KEY_ID=root_user
      - AWS_SECRET_ACCESS_KEY=root_pass
      - AWS_REGION=us-east-1
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio:9000 root_user root_pass) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc rm -r --force minio/warehouse;
      /usr/bin/mc mb minio/warehouse;
      /usr/bin/mc policy set public minio/warehouse;
      exit 0;
      "

  spark-iceberg:
    image: tabulario/spark-iceberg:latest
    container_name: spark
    build: ./spark
    depends_on:
      - rest
      - minio
    volumes:
      - ./data/warehouse:/home/iceberg/warehouse
      - ./data/notebooks:/home/iceberg/notebooks/notebooks
    environment:
      - AWS_ACCESS_KEY_ID=root_user
      - AWS_SECRET_ACCESS_KEY=root_pass
      - AWS_REGION=us-east-1
    ports:
      - 8888:8888
      - 8080:8080
    links:
      - rest:rest
      - minio:minio

  flink-jobmanager:
    image: lilmonk/flink:latest
    build: ./flink
    container_name: flink-jobmanager
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
      - AWS_ACCESS_KEY_ID=root_user
      - AWS_SECRET_ACCESS_KEY=root_pass
      - AWS_REGION=us-east-1
    volumes:
      - ./data/queries:/data

  flink-taskmanager:
    image: lilmonk/flink:latest
    container_name: flink-taskmanager
    depends_on:
      - flink-jobmanager
    command: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
        taskmanager.numberOfTaskSlots: 2
      - AWS_ACCESS_KEY_ID=root_user
      - AWS_SECRET_ACCESS_KEY=root_pass
      - AWS_REGION=us-east-1
    volumes:
      - ./data/queries:/data